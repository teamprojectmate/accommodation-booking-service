// src/api/auth/authService.js
import api from '../axios';

// ‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è
const register = async (userData) => {
  const response = await api.post('/auth/registration', userData);
  return response.data;
};

// ‚úÖ –õ–æ–≥—ñ–Ω
const login = async (userData) => {
  console.log('üì§ –ù–∞–¥—Å–∏–ª–∞—é –Ω–∞ –±–µ–∫–µ–Ω–¥ /auth/login:', userData);
  const response = await api.post('/auth/login', userData);

  // –æ—á—ñ–∫—É—î–º–æ { token: "..." }
  const authData = { token: response.data.token };

  // üîπ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
  localStorage.setItem('auth', JSON.stringify(authData));

  return authData;
};

// ‚úÖ –í–∏—Ö—ñ–¥
const logout = () => {
  localStorage.removeItem('auth');
  localStorage.removeItem('userProfile');
};

// ‚úÖ –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
const getProfile = async () => {
  const stored = JSON.parse(localStorage.getItem('auth'));
  if (!stored?.token) throw new Error('–ù–µ–º–∞ —Ç–æ–∫–µ–Ω–∞');

  const response = await api.get('/users/me', {
    headers: {
      Authorization: `Bearer ${stored.token}`
    }
  });

  return response.data;
};

const authService = {
  register,
  login,
  logout,
  getProfile
};

export default authService;
