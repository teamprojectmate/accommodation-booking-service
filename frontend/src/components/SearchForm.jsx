import React, { useState, useEffect, useCallback } from 'react';
import '../styles/components/_hero.scss';
import '../styles/components/_forms.scss';
import '../styles/components/_buttons.scss';

// debounce —É—Ç–∏–ª—ñ—Ç–∞
const debounce = (fn, delay) => {
  let timeout;
  return (...args) => {
    clearTimeout(timeout);
    timeout = setTimeout(() => fn(...args), delay);
  };
};

const SearchForm = ({ onSearch }) => {
  const [destination, setDestination] = useState('');
  const [checkInDate, setCheckInDate] = useState('');
  const [checkOutDate, setCheckOutDate] = useState('');
  const [adults, setAdults] = useState(1);
  const [children, setChildren] = useState(0);

  // üîπ debounce –¥–ª—è –ø–æ—à—É–∫—É
  const debouncedSearch = useCallback(
    debounce((value) => {
      const cleanDestination = value.trim();
      onSearch({
        destination: cleanDestination,
        checkInDate,
        checkOutDate,
        adults,
        children
      });
    }, 500),
    [checkInDate, checkOutDate, adults, children, onSearch]
  );

  useEffect(() => {
    if (destination) {
      debouncedSearch(destination);
    }
  }, [destination, debouncedSearch]);

  const handleSubmit = (e) => {
    e.preventDefault();
    const cleanDestination = destination.trim();
    onSearch({
      destination: cleanDestination,
      checkInDate,
      checkOutDate,
      adults,
      children
    });
  };

  return (
    <form onSubmit={handleSubmit} className="search-form-container">
      {/* –ú—ñ—Å—Ç–æ */}
      <div className="search-input-group">
        <label htmlFor="destination-input">–ö—É–¥–∏ –≤–∏ –≤–∏—Ä—É—à–∞—î—Ç–µ?</label>
        <input
          type="text"
          id="destination-input"
          className="form-control"
          placeholder="–ù–∞–ø—Ä–∏–∫–ª–∞–¥, –ö–∏—ó–≤"
          value={destination}
          onChange={(e) => setDestination(e.target.value)}
        />
      </div>

      {/* –ë–ª–æ–∫ –¥–∞—Ç */}
      <div className="search-input-group date-range-group">
        <label>–î–∞—Ç–∞ –∑–∞—ó–∑–¥—É - –î–∞—Ç–∞ –≤–∏—ó–∑–¥—É</label>
        <div className="date-range-inputs">
          <input
            type="date"
            id="check-in-date"
            className="form-control"
            value={checkInDate}
            onChange={(e) => setCheckInDate(e.target.value)}
          />
          <span className="date-separator">-</span>
          <input
            type="date"
            id="check-out-date"
            className="form-control"
            value={checkOutDate}
            onChange={(e) => setCheckOutDate(e.target.value)}
          />
        </div>
      </div>

      {/* –î–æ—Ä–æ—Å–ª—ñ */}
      <div className="search-input-group">
        <label htmlFor="adults-count">–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–æ—Ä–æ—Å–ª–∏—Ö</label>
        <input
          type="number"
          id="adults-count"
          className="form-control"
          min="1"
          value={adults}
          onChange={(e) => setAdults(parseInt(e.target.value))}
        />
      </div>

      {/* –î—ñ—Ç–∏ */}
      <div className="search-input-group">
        <label htmlFor="children-count">–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥—ñ—Ç–µ–π</label>
        <input
          type="number"
          id="children-count"
          className="form-control"
          min="0"
          value={children}
          onChange={(e) => setChildren(parseInt(e.target.value))}
        />
      </div>

      <button className="btn-primary search-btn" type="submit">
        üîç –®—É–∫–∞—Ç–∏
      </button>
    </form>
  );
};

export default SearchForm;
