// src/pages/Accommodations/AccommodationFilters.jsx
import React from 'react';
import { Filter, RotateCcw } from 'lucide-react';
import '../../styles/components/_forms.scss';
import '../../styles/components/_buttons.scss';
import '../../styles/components/_filters.scss';

const AccommodationFilters = ({
  cities,
  type, // ‚úÖ –∑–∞–º—ñ–Ω–∏–ª–∏
  size, // ‚úÖ –∑–∞–º—ñ–Ω–∏–ª–∏
  minDailyRate,
  maxDailyRate,
  setCities,
  setType, // ‚úÖ –∑–∞–º—ñ–Ω–∏–ª–∏
  setSize, // ‚úÖ –∑–∞–º—ñ–Ω–∏–ª–∏
  setMinDailyRate,
  setMaxDailyRate,
  onApplyFilters,
  onResetFilters
}) => {
  // üîπ –û–±—Ä–æ–±–∫–∞ –º—ñ—Å—Ç–∞ (–æ–¥–Ω–µ –º—ñ—Å—Ç–æ)
  const handleCityChange = (e) => {
    const value = e.target.value.trim();
    setCities(value ? [value] : []);
  };

  // üîπ –û–±—Ä–æ–±–∫–∞ —á–µ–∫–±–æ–∫—Å—ñ–≤ —Ç–∏–ø—ñ–≤ –∂–∏—Ç–ª–∞
  const handleTypeChange = (e) => {
    const { value, checked } = e.target;
    if (checked) {
      setType([...type, value]);
    } else {
      setType(type.filter((t) => t !== value));
    }
  };

  // üîπ –û–±—Ä–æ–±–∫–∞ —Ä–æ–∑–º—ñ—Ä—É (–º–∞—Å–∏–≤)
  const handleSizeChange = (e) => {
    setSize(
      e.target.value
        .split(',')
        .map((s) => s.trim())
        .filter(Boolean)
    );
  };

  return (
    <section className="filters-section">
      <div className="filters-box">
        <h4 className="filters-heading">–§—ñ–ª—å—Ç—Ä–∏ —Ç–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è</h4>

        <div className="filters-grid">
          {/* –ú—ñ—Å—Ç–æ */}
          <div className="filter-item">
            <label>–ú—ñ—Å—Ç–æ</label>
            <input
              type="text"
              className="form-control"
              placeholder="–ù–∞–ø—Ä–∏–∫–ª–∞–¥ –ö–∏—ó–≤"
              value={cities[0] || ''}
              onChange={handleCityChange}
            />
          </div>

          {/* –¢–∏–ø –∂–∏—Ç–ª–∞ */}
          <div className="filter-item">
            <label>–¢–∏–ø –∂–∏—Ç–ª–∞</label>
            <div className="form-check-group">
              <label className="form-check">
                <input
                  type="checkbox"
                  value="HOUSE"
                  checked={type.includes('HOUSE')}
                  onChange={handleTypeChange}
                />
                –ë—É–¥–∏–Ω–æ–∫
              </label>
              <label className="form-check">
                <input
                  type="checkbox"
                  value="APARTMENT"
                  checked={type.includes('APARTMENT')}
                  onChange={handleTypeChange}
                />
                –ö–≤–∞—Ä—Ç–∏—Ä–∞
              </label>
              <label className="form-check">
                <input
                  type="checkbox"
                  value="CONDO"
                  checked={type.includes('CONDO')}
                  onChange={handleTypeChange}
                />
                –ö–æ–Ω–¥–æ
              </label>
              <label className="form-check">
                <input
                  type="checkbox"
                  value="VACATION_HOME"
                  checked={type.includes('VACATION_HOME')}
                  onChange={handleTypeChange}
                />
                –î—ñ–º –¥–ª—è –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É
              </label>
            </div>
          </div>

          {/* –†–æ–∑–º—ñ—Ä */}
          <div className="filter-item">
            <label>–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫—ñ–º–Ω–∞—Ç</label>
            <input
              type="text"
              className="form-control"
              placeholder="–ù–∞–ø—Ä–∏–∫–ª–∞–¥ 2 Bedroom, 3 Bedroom"
              value={size.join(', ')}
              onChange={handleSizeChange}
            />
          </div>

          {/* –¶—ñ–Ω–∞ –≤—ñ–¥ */}
          <div className="filter-item">
            <label>–¶—ñ–Ω–∞ –≤—ñ–¥ (‚Ç¥)</label>
            <input
              type="number"
              className="form-control"
              placeholder="–í—ñ–¥, –≥—Ä–Ω"
              value={minDailyRate}
              onChange={(e) => setMinDailyRate(e.target.value)}
            />
          </div>

          {/* –¶—ñ–Ω–∞ –¥–æ */}
          <div className="filter-item">
            <label>–¶—ñ–Ω–∞ –¥–æ (‚Ç¥)</label>
            <input
              type="number"
              className="form-control"
              placeholder="–î–æ, –≥—Ä–Ω"
              value={maxDailyRate}
              onChange={(e) => setMaxDailyRate(e.target.value)}
            />
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ */}
        <div className="filters-actions">
          <button className="btn-primary btn-with-icon" onClick={onApplyFilters}>
            <Filter size={18} /> –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏
          </button>
          <button className="btn-outline btn-with-icon" onClick={onResetFilters}>
            <RotateCcw size={18} /> –°–∫–∏–Ω—É—Ç–∏
          </button>
        </div>
      </div>
    </section>
  );
};

export default AccommodationFilters;
