import React, { useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import AccommodationList from './AccommodationList';
import Notification from '../../components/Notification';
import SearchForm from '../../components/SearchForm';
import Offers from '../../components/Offers';
import AccommodationFilters from './AccommodationFilters';
import Pagination from '../../components/Pagination';
import {
  loadAccommodations,
  setFilters,
  resetFilters,
  setPage
} from '../../store/slices/accommodationsSlice';

const Accommodations = () => {
  const dispatch = useDispatch();
  const { items, loading, error, filters, page, totalPages } = useSelector(
    (state) => state.accommodations
  );

  // üîπ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –∞–±–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
  useEffect(() => {
    dispatch(loadAccommodations());
  }, [dispatch, filters, page]);

  // üîπ –ø–æ—à—É–∫ –ø–æ –º—ñ—Å—Ç—É
  const handleSearch = ({ destination }) => {
    dispatch(setFilters({ city: destination?.trim() ? [destination.trim()] : [] }));
    dispatch(setPage(0)); // —Å–∫–∏–¥–∞—Ç–∏ –Ω–∞ –ø–µ—Ä—à—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
  };

  // üîπ –∑–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä–∏ (–ø–æ —Å—É—Ç—ñ, –ø—Ä–æ—Å—Ç–æ —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É)
  const handleApplyFilters = () => {
    dispatch(setPage(0));
  };

  // üîπ —Å–∫–∏–Ω—É—Ç–∏ –≤—Å—ñ —Ñ—ñ–ª—å—Ç—Ä–∏
  const handleResetFilters = () => {
    dispatch(resetFilters());
    dispatch(setPage(0));
  };

  return (
    <div>
      {/* Hero */}
      <div className="hero-section">
        <div className="container">
          <h1 className="hero-title">–ó–Ω–∞–π–¥—ñ—Ç—å –ø–æ–º–µ—à–∫–∞–Ω–Ω—è –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–æ—ó –ø–æ–¥–æ—Ä–æ–∂—ñ</h1>
          <p className="hero-subtitle">
            –ó–Ω–∞—Ö–æ–¥—å—Ç–µ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –≥–æ—Ç–µ–ª—ñ–≤, –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö –ø–æ–º–µ—à–∫–∞–Ω—å —Ç–∞ –±–∞–≥–∞—Ç–æ —ñ–Ω—à–æ–≥–æ...
          </p>
          <SearchForm onSearch={handleSearch} />
        </div>
      </div>

      {/* Content */}
      <div className="container mt-4">
        <Offers />
        <h2 className="section-heading mt-5">–î–æ—Å—Ç—É–ø–Ω—ñ –ø–æ–º–µ—à–∫–∞–Ω–Ω—è</h2>

        <AccommodationFilters
          cities={filters.city || []}
          types={filters.type || []}
          sizes={filters.size || []}
          minDailyRate={filters.minDailyRate || ''}
          maxDailyRate={filters.maxDailyRate || ''}
          setCities={(arr) => dispatch(setFilters({ city: arr }))}
          setTypes={(val) => dispatch(setFilters({ type: val }))}
          setSizes={(val) => dispatch(setFilters({ size: val }))}
          setMinDailyRate={(val) =>
            dispatch(setFilters({ minDailyRate: val ? Number(val) : null }))
          }
          setMaxDailyRate={(val) =>
            dispatch(setFilters({ maxDailyRate: val ? Number(val) : null }))
          }
          onApplyFilters={handleApplyFilters}
          onResetFilters={handleResetFilters}
        />

        {loading && <p className="text-center">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>}
        {error && <Notification message={error} type="danger" />}
        {!loading &&
          !error &&
          (items.length > 0 ? (
            <>
              <AccommodationList accommodations={items} />
              <Pagination
                page={page}
                totalPages={totalPages}
                onPageChange={(newPage) => dispatch(setPage(newPage))}
              />
            </>
          ) : (
            <p className="text-center">–ü–æ–º–µ—à–∫–∞–Ω—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</p>
          ))}
      </div>
    </div>
  );
};

export default Accommodations;
