// src/pages/Auth/ProtectedRoute.jsx
import React from 'react';
import { useSelector } from 'react-redux';
import { Navigate, useLocation } from 'react-router-dom';
import Notification from '../../components/Notification';

const ProtectedRoute = ({ children, requiredRole = null }) => {
  const { isAuthenticated, loading, user } = useSelector((state) => state.auth);
  const location = useLocation();

  if (loading) {
    return <p className="text-center">‚è≥ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø—É...</p>;
  }

  // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π ‚Üí —Ä–µ–¥—ñ—Ä–µ–∫—Ç –Ω–∞ /login
  if (!isAuthenticated) {
    return <Navigate to="/login" state={{ from: location }} replace />;
  }

  // –Ø–∫—â–æ —î –≤–∏–º–æ–≥–∞ –¥–æ —Ä–æ–ª—ñ
  if (requiredRole) {
    const roles = Array.isArray(requiredRole) ? requiredRole : [requiredRole];
    if (!roles.includes(user?.role)) {
      return (
        <main className="container page">
          <h1 className="text-center">üö´ –î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ</h1>
          <p className="text-center">–£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ–∑–≤–æ–ª—É –Ω–∞ –ø–µ—Ä–µ–≥–ª—è–¥ —Ü—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏.</p>
          <Notification
            message="–£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ–∑–≤–æ–ª—É –Ω–∞ –ø–µ—Ä–µ–≥–ª—è–¥ —Ü—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏."
            type="danger"
          />
        </main>
      );
    }
  }

  // –Ø–∫—â–æ –≤—Å–µ –¥–æ–±—Ä–µ ‚Üí –ø–æ–∫–∞–∑—É—î–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç
  return children;
};

export default ProtectedRoute;
