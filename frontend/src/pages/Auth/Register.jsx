// src/pages/Auth/Register.jsx
import { useState, useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { Link, useNavigate } from 'react-router-dom';
import { FaUser, FaEnvelope, FaLock, FaHome } from 'react-icons/fa';
import { register } from '../../store/slices/authSlice';
import PasswordStrengthBar from '../../components/PasswordStrengthBar';
import '../../styles/components/_auth.scss';

const Register = () => {
  const dispatch = useDispatch();
  const navigate = useNavigate();

  const { isAuthenticated, loading, error } = useSelector((s) => s.auth);

  const [formData, setFormData] = useState({
    firstName: '',
    lastName: '',
    email: '',
    password: '',
    repeatPassword: ''
  });

  const [passwordError, setPasswordError] = useState(null);

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
    if (e.target.name === 'password' || e.target.name === 'repeatPassword') {
      setPasswordError(null);
    }
  };

  const handleSubmit = (e) => {
    e.preventDefault();

    if (formData.password.length < 6) {
      setPasswordError('–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –º—ñ–Ω—ñ–º—É–º 6 —Å–∏–º–≤–æ–ª—ñ–≤');
      return;
    }

    if (formData.password !== formData.repeatPassword) {
      setPasswordError('–ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å');
      return;
    }

    // üîπ —Ç—ñ–ª—å–∫–∏ –≤–∏–∫–ª–∏–∫–∞—î–º–æ register ‚Äî –∞–≤—Ç–æ–ª–æ–≥—ñ–Ω –∑—Ä–æ–±–∏—Ç—å slice
    dispatch(register(formData));
  };

  // ‚úÖ –ø—ñ—Å–ª—è –ª–æ–≥—ñ–Ω—É/—Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó ‚Üí —Ä–µ–¥—ñ—Ä–µ–∫—Ç
  useEffect(() => {
    if (isAuthenticated) {
      navigate('/');
    }
  }, [isAuthenticated, navigate]);

  const passwordsDontMatch =
    formData.password &&
    formData.repeatPassword &&
    formData.password !== formData.repeatPassword;

  const disableSubmit = loading || formData.password.length < 6 || passwordsDontMatch;

  return (
    <div className="auth-layout">
      <div className="auth-card">
        <h2 className="auth-title">–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è</h2>
        <p className="form-subtitle">
          –í–∂–µ –º–∞—î—Ç–µ –∞–∫–∞—É–Ω—Ç? <Link to="/login">–£–≤—ñ–π—Ç–∏</Link>
        </p>

        <form onSubmit={handleSubmit}>
          <div className="form-group with-icon">
            <FaUser className="input-icon" />
            <input
              type="text"
              name="firstName"
              className="form-control"
              placeholder="–Ü–º'—è"
              value={formData.firstName}
              onChange={handleChange}
              required
            />
          </div>

          <div className="form-group with-icon">
            <FaUser className="input-icon" />
            <input
              type="text"
              name="lastName"
              className="form-control"
              placeholder="–ü—Ä—ñ–∑–≤–∏—â–µ"
              value={formData.lastName}
              onChange={handleChange}
              required
            />
          </div>

          <div className="form-group with-icon">
            <FaEnvelope className="input-icon" />
            <input
              type="email"
              name="email"
              className="form-control"
              placeholder="–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞"
              value={formData.email}
              onChange={handleChange}
              required
            />
          </div>

          <div className="form-group with-icon">
            <FaLock className="input-icon" />
            <input
              type="password"
              name="password"
              className="form-control"
              placeholder="–ü–∞—Ä–æ–ª—å (–º—ñ–Ω. 6 —Å–∏–º–≤–æ–ª—ñ–≤)"
              value={formData.password}
              onChange={handleChange}
              required
            />
          </div>

          <PasswordStrengthBar password={formData.password} />

          <div className="form-group with-icon">
            <FaLock className="input-icon" />
            <input
              type="password"
              name="repeatPassword"
              className="form-control"
              placeholder="–ü–æ–≤—Ç–æ—Ä—ñ—Ç—å –ø–∞—Ä–æ–ª—å"
              value={formData.repeatPassword}
              onChange={handleChange}
              required
            />
          </div>

          {passwordError && <p className="form-error">{passwordError}</p>}
          {error && <p className="form-error">{error}</p>}
          {passwordsDontMatch && <p className="form-error">–ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å</p>}

          <button type="submit" disabled={disableSubmit}>
            {loading ? '–ó–∞—á–µ–∫–∞–π—Ç–µ...' : '–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è'}
          </button>
        </form>
      </div>

      <div className="auth-side">
        <FaHome className="auth-icon" />
        <h2 className="auth-title">–ü—Ä–∏—î–¥–Ω—É–π—Ç–µ—Å—å –¥–æ Heartland Homes üè°</h2>
        <p className="auth-subtitle">
          –ó–Ω–∞—Ö–æ–¥—å—Ç–µ —ñ–¥–µ–∞–ª—å–Ω—ñ –±—É–¥–∏–Ω–∫–∏ –¥–ª—è –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É —á–∏ –ø–æ–¥–æ—Ä–æ–∂–µ–π —Ä–∞–∑–æ–º —ñ–∑{' '}
          <strong>Heartland Homes</strong>.
        </p>
      </div>
    </div>
  );
};

export default Register;
