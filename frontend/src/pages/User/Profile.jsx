// src/pages/User/Profile.jsx
import { useEffect, useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { fetchProfile, updateProfile } from '../../store/slices/userSlice';
import Notification from '../../components/Notification';

const Profile = () => {
  const dispatch = useDispatch();
  const { profile, loading, error } = useSelector((state) => state.user);

  const [formData, setFormData] = useState({ email: '', firstName: '', lastName: '' });
  const [notification, setNotification] = useState(null);

  useEffect(() => {
    dispatch(fetchProfile());
  }, [dispatch]);

  useEffect(() => {
    if (profile) {
      setFormData({
        email: profile.email || '',
        firstName: profile.firstName || '',
        lastName: profile.lastName || ''
      });
    }
  }, [profile]);

  const handleSubmit = (e) => {
    e.preventDefault();
    dispatch(updateProfile(formData))
      .unwrap()
      .then(() => setNotification({ message: '‚úÖ –ü—Ä–æ—Ñ—ñ–ª—å –æ–Ω–æ–≤–ª–µ–Ω–æ!', type: 'success' }))
      .catch(() =>
        setNotification({ message: '‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é.', type: 'danger' })
      );
  };

  return (
    <div className="container page">
      <div className="profile-card">
        <h1 className="auth-title">–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å</h1>

        {/* üîπ –í–∏–≤–æ–¥–∏–º–æ –±—É–¥—å-—è–∫—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–≤–∂–¥–∏ */}
        {error && <Notification message={error} type="danger" />}
        {notification && (
          <Notification message={notification.message} type={notification.type} />
        )}

        {loading && <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>}

        {!loading && profile && (
          <form onSubmit={handleSubmit}>
            <div className="form-group">
              <label>–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞</label>
              <input
                type="email"
                className="form-control"
                value={formData.email}
                onChange={(e) => setFormData({ ...formData, email: e.target.value })}
              />
            </div>
            <div className="form-group">
              <label>–Ü–º‚Äô—è</label>
              <input
                type="text"
                className="form-control"
                value={formData.firstName}
                onChange={(e) => setFormData({ ...formData, firstName: e.target.value })}
              />
            </div>
            <div className="form-group">
              <label>–ü—Ä—ñ–∑–≤–∏—â–µ</label>
              <input
                type="text"
                className="form-control"
                value={formData.lastName}
                onChange={(e) => setFormData({ ...formData, lastName: e.target.value })}
              />
            </div>
            <button className="btn-primary" type="submit" disabled={loading}>
              {loading ? '–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è...' : '–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å'}
            </button>
          </form>
        )}
      </div>
    </div>
  );
};

export default Profile;
